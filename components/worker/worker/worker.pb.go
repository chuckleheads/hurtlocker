// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/worker/worker/worker.proto

/*
Package worker is a generated protocol buffer package.

It is generated from these files:
	components/worker/worker/worker.proto

It has these top-level messages:
	Heartbeat
*/
package worker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Os int32

const (
	Os_Linux   Os = 0
	Os_Darwin  Os = 1
	Os_Windows Os = 2
)

var Os_name = map[int32]string{
	0: "Linux",
	1: "Darwin",
	2: "Windows",
}
var Os_value = map[string]int32{
	"Linux":   0,
	"Darwin":  1,
	"Windows": 2,
}

func (x Os) String() string {
	return proto.EnumName(Os_name, int32(x))
}
func (Os) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type WorkerState int32

const (
	WorkerState_Ready WorkerState = 0
	WorkerState_Busy  WorkerState = 1
)

var WorkerState_name = map[int32]string{
	0: "Ready",
	1: "Busy",
}
var WorkerState_value = map[string]int32{
	"Ready": 0,
	"Busy":  1,
}

func (x WorkerState) String() string {
	return proto.EnumName(WorkerState_name, int32(x))
}
func (WorkerState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Heartbeat struct {
	Endpoint string      `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Os       Os          `protobuf:"varint,2,opt,name=os,enum=hurtlocker.worker.worker.Os" json:"os,omitempty"`
	State    WorkerState `protobuf:"varint,3,opt,name=state,enum=hurtlocker.worker.worker.WorkerState" json:"state,omitempty"`
}

func (m *Heartbeat) Reset()                    { *m = Heartbeat{} }
func (m *Heartbeat) String() string            { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()               {}
func (*Heartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Heartbeat) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Heartbeat) GetOs() Os {
	if m != nil {
		return m.Os
	}
	return Os_Linux
}

func (m *Heartbeat) GetState() WorkerState {
	if m != nil {
		return m.State
	}
	return WorkerState_Ready
}

func init() {
	proto.RegisterType((*Heartbeat)(nil), "hurtlocker.worker.worker.Heartbeat")
	proto.RegisterEnum("hurtlocker.worker.worker.Os", Os_name, Os_value)
	proto.RegisterEnum("hurtlocker.worker.worker.WorkerState", WorkerState_name, WorkerState_value)
}

func init() { proto.RegisterFile("components/worker/worker/worker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0xbb, 0xd1, 0xd6, 0x66, 0x0a, 0xb2, 0xec, 0x29, 0x88, 0x87, 0x52, 0x28, 0x84, 0x22,
	0x09, 0xe8, 0xb1, 0x78, 0x29, 0x1e, 0x3c, 0x08, 0x85, 0x78, 0x28, 0x78, 0xdb, 0x6c, 0x16, 0xb3,
	0xb4, 0xdd, 0x09, 0xbb, 0xb3, 0xc4, 0xfe, 0x0d, 0x7f, 0xb1, 0x24, 0x15, 0x3f, 0x0e, 0x39, 0x3d,
	0xcc, 0xc7, 0x33, 0x0c, 0x2f, 0x2c, 0x15, 0x1e, 0x1b, 0xb4, 0xda, 0x92, 0xcf, 0x5b, 0x74, 0x7b,
	0xed, 0xfe, 0x23, 0x6b, 0x1c, 0x12, 0x8a, 0xa4, 0x0e, 0x8e, 0x0e, 0xa8, 0xba, 0xce, 0xf7, 0xe0,
	0x8c, 0xc5, 0x27, 0x83, 0xf8, 0x59, 0x4b, 0x47, 0xa5, 0x96, 0x24, 0x6e, 0x60, 0xaa, 0x6d, 0xd5,
	0xa0, 0xb1, 0x94, 0xb0, 0x39, 0x4b, 0xe3, 0xe2, 0xa7, 0x16, 0x77, 0x10, 0xa1, 0x4f, 0xa2, 0x39,
	0x4b, 0xaf, 0xef, 0x6f, 0xb3, 0xa1, 0x83, 0xd9, 0xd6, 0x17, 0x11, 0x7a, 0xb1, 0x86, 0xb1, 0x27,
	0x49, 0x3a, 0xb9, 0xe8, 0x85, 0xe5, 0xb0, 0xb0, 0xeb, 0xf1, 0xda, 0x2d, 0x17, 0x67, 0x67, 0x95,
	0x42, 0xb4, 0xf5, 0x22, 0x86, 0xf1, 0x8b, 0xb1, 0xe1, 0x83, 0x8f, 0x04, 0xc0, 0xe4, 0x49, 0xba,
	0xd6, 0x58, 0xce, 0xc4, 0x0c, 0xae, 0x76, 0xc6, 0x56, 0xd8, 0x7a, 0x1e, 0xad, 0x16, 0x30, 0xfb,
	0xe3, 0x77, 0x4a, 0xa1, 0x65, 0x75, 0xe2, 0x23, 0x31, 0x85, 0xcb, 0x4d, 0xf0, 0x27, 0xce, 0x36,
	0x8f, 0x6f, 0xeb, 0x77, 0x43, 0x75, 0x28, 0x33, 0x85, 0xc7, 0x5c, 0xd5, 0x41, 0xed, 0x0f, 0xba,
	0xd6, 0xb2, 0xf2, 0xf9, 0xef, 0x53, 0xf9, 0x50, 0x90, 0xe5, 0xa4, 0x8f, 0xf0, 0xe1, 0x2b, 0x00,
	0x00, 0xff, 0xff, 0xdc, 0xd5, 0x1f, 0x26, 0x6b, 0x01, 0x00, 0x00,
}
