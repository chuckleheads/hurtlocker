// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/originsrv/api/projects/projects.proto

/*
Package projects is a generated protocol buffer package.

It is generated from these files:
	components/originsrv/api/projects/projects.proto

It has these top-level messages:
*/
package projects

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import hurtlocker_originsrv_projects_request "github.com/chuckleheads/hurtlocker/components/originsrv/projects/request"
import hurtlocker_originsrv_projects_response "github.com/chuckleheads/hurtlocker/components/originsrv/projects/response"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Projects service

type ProjectsClient interface {
	GetProject(ctx context.Context, in *hurtlocker_originsrv_projects_request.GetProjectReq, opts ...grpc.CallOption) (*hurtlocker_originsrv_projects_response.ProjectResp, error)
	CreateProject(ctx context.Context, in *hurtlocker_originsrv_projects_request.CreateProjectReq, opts ...grpc.CallOption) (*hurtlocker_originsrv_projects_response.ProjectResp, error)
	UpdateProject(ctx context.Context, in *hurtlocker_originsrv_projects_request.UpdateProjectReq, opts ...grpc.CallOption) (*hurtlocker_originsrv_projects_response.ProjectResp, error)
}

type projectsClient struct {
	cc *grpc.ClientConn
}

func NewProjectsClient(cc *grpc.ClientConn) ProjectsClient {
	return &projectsClient{cc}
}

func (c *projectsClient) GetProject(ctx context.Context, in *hurtlocker_originsrv_projects_request.GetProjectReq, opts ...grpc.CallOption) (*hurtlocker_originsrv_projects_response.ProjectResp, error) {
	out := new(hurtlocker_originsrv_projects_response.ProjectResp)
	err := grpc.Invoke(ctx, "/hurtlocker.originsrv.projects.Projects/GetProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) CreateProject(ctx context.Context, in *hurtlocker_originsrv_projects_request.CreateProjectReq, opts ...grpc.CallOption) (*hurtlocker_originsrv_projects_response.ProjectResp, error) {
	out := new(hurtlocker_originsrv_projects_response.ProjectResp)
	err := grpc.Invoke(ctx, "/hurtlocker.originsrv.projects.Projects/CreateProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) UpdateProject(ctx context.Context, in *hurtlocker_originsrv_projects_request.UpdateProjectReq, opts ...grpc.CallOption) (*hurtlocker_originsrv_projects_response.ProjectResp, error) {
	out := new(hurtlocker_originsrv_projects_response.ProjectResp)
	err := grpc.Invoke(ctx, "/hurtlocker.originsrv.projects.Projects/UpdateProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Projects service

type ProjectsServer interface {
	GetProject(context.Context, *hurtlocker_originsrv_projects_request.GetProjectReq) (*hurtlocker_originsrv_projects_response.ProjectResp, error)
	CreateProject(context.Context, *hurtlocker_originsrv_projects_request.CreateProjectReq) (*hurtlocker_originsrv_projects_response.ProjectResp, error)
	UpdateProject(context.Context, *hurtlocker_originsrv_projects_request.UpdateProjectReq) (*hurtlocker_originsrv_projects_response.ProjectResp, error)
}

func RegisterProjectsServer(s *grpc.Server, srv ProjectsServer) {
	s.RegisterService(&_Projects_serviceDesc, srv)
}

func _Projects_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hurtlocker_originsrv_projects_request.GetProjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hurtlocker.originsrv.projects.Projects/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetProject(ctx, req.(*hurtlocker_originsrv_projects_request.GetProjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hurtlocker_originsrv_projects_request.CreateProjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hurtlocker.originsrv.projects.Projects/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).CreateProject(ctx, req.(*hurtlocker_originsrv_projects_request.CreateProjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hurtlocker_originsrv_projects_request.UpdateProjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hurtlocker.originsrv.projects.Projects/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).UpdateProject(ctx, req.(*hurtlocker_originsrv_projects_request.UpdateProjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Projects_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hurtlocker.originsrv.projects.Projects",
	HandlerType: (*ProjectsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProject",
			Handler:    _Projects_GetProject_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _Projects_CreateProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _Projects_UpdateProject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "components/originsrv/api/projects/projects.proto",
}

func init() { proto.RegisterFile("components/originsrv/api/projects/projects.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x4f, 0x4a, 0x03, 0x31,
	0x14, 0x87, 0x19, 0x11, 0xd1, 0x40, 0x5d, 0x04, 0x57, 0x83, 0x2e, 0xac, 0x2b, 0xbb, 0x48, 0x4a,
	0xff, 0x20, 0xd4, 0x9d, 0x8a, 0x6e, 0x45, 0x70, 0xe3, 0x46, 0xd2, 0xf4, 0x31, 0x33, 0xb6, 0xcd,
	0x4b, 0x93, 0x8c, 0x9b, 0xd2, 0x4d, 0xaf, 0xd0, 0x1b, 0x78, 0x0c, 0xaf, 0xe1, 0x15, 0x3c, 0x88,
	0x30, 0xcd, 0xcc, 0x30, 0x45, 0x1c, 0x99, 0x5d, 0xf2, 0xc8, 0x97, 0xdf, 0x97, 0x97, 0x84, 0x74,
	0x25, 0xce, 0x35, 0x2a, 0x50, 0xce, 0x72, 0x34, 0x49, 0x94, 0x28, 0x6b, 0xde, 0xb9, 0xd0, 0x09,
	0xd7, 0x06, 0xdf, 0x40, 0x3a, 0x5b, 0x0c, 0x98, 0x36, 0xe8, 0x90, 0x9e, 0xc5, 0xa9, 0x71, 0x33,
	0x94, 0x53, 0x30, 0xac, 0x20, 0x58, 0xbe, 0x28, 0x3c, 0x8d, 0x10, 0xa3, 0x19, 0x64, 0x5b, 0x08,
	0xa5, 0xd0, 0x09, 0x97, 0xa0, 0xf2, 0x70, 0x38, 0xf8, 0x35, 0xae, 0x88, 0x32, 0xb0, 0x48, 0xc1,
	0xba, 0x9d, 0xc8, 0x70, 0x58, 0x47, 0x59, 0x8d, 0xca, 0xc2, 0x0e, 0xd6, 0x5b, 0xef, 0x93, 0xc3,
	0x47, 0x5f, 0xa2, 0x1f, 0x01, 0x21, 0x0f, 0xe0, 0xfc, 0x9c, 0x0e, 0xd8, 0x9f, 0xc7, 0x60, 0xde,
	0x84, 0x95, 0xc8, 0x13, 0x2c, 0xc2, 0x7e, 0x2d, 0xb5, 0x35, 0x61, 0x05, 0x63, 0x75, 0xfb, 0x72,
	0xfd, 0xf5, 0xbd, 0xd9, 0xbb, 0xa0, 0xe7, 0xa5, 0xf1, 0x72, 0xcb, 0xae, 0xf8, 0x52, 0x0b, 0x39,
	0x15, 0x11, 0xbc, 0x2a, 0x31, 0x87, 0x15, 0xdd, 0x04, 0xa4, 0x75, 0x6b, 0x40, 0x38, 0xc8, 0x3d,
	0xaf, 0xfe, 0xe9, 0x59, 0xa1, 0x1a, 0xab, 0x9e, 0x64, 0xaa, 0xc7, 0xed, 0xa3, 0x42, 0x75, 0x14,
	0x74, 0xe8, 0x67, 0x40, 0x5a, 0xcf, 0x7a, 0xd2, 0xc0, 0xaa, 0x42, 0x35, 0xb6, 0xba, 0xce, 0xac,
	0x86, 0xbd, 0x6e, 0x7e, 0xf9, 0x7c, 0xe9, 0x01, 0x56, 0xf6, 0xd1, 0x17, 0x2a, 0xfd, 0x1c, 0x05,
	0x9d, 0x9b, 0xfb, 0x97, 0xbb, 0x28, 0x71, 0x71, 0x3a, 0x66, 0x12, 0xe7, 0x5c, 0xc6, 0xa9, 0x9c,
	0xce, 0x20, 0x06, 0x31, 0xb1, 0xbc, 0x54, 0xe1, 0xb5, 0xbf, 0x60, 0x7c, 0x90, 0xbd, 0xa9, 0xfe,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x3d, 0x2e, 0x61, 0x31, 0x03, 0x00, 0x00,
}
