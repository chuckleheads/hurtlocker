// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/jobsrv/jobs/jobs.proto

/*
Package jobs is a generated protocol buffer package.

It is generated from these files:
	components/jobsrv/jobs/jobs.proto

It has these top-level messages:
*/
package jobs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hurtlocker_jobsrv_jobs_request "github.com/chuckleheads/hurtlocker/components/jobsrv/jobs/request"
import hurtlocker_jobsrv_jobs_response "github.com/chuckleheads/hurtlocker/components/jobsrv/jobs/response"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Jobs service

type JobsClient interface {
	GetJob(ctx context.Context, in *hurtlocker_jobsrv_jobs_request.GetJobReq, opts ...grpc.CallOption) (*hurtlocker_jobsrv_jobs_response.JobResp, error)
	CreateJob(ctx context.Context, in *hurtlocker_jobsrv_jobs_request.CreateJobReq, opts ...grpc.CallOption) (*hurtlocker_jobsrv_jobs_response.JobResp, error)
}

type jobsClient struct {
	cc *grpc.ClientConn
}

func NewJobsClient(cc *grpc.ClientConn) JobsClient {
	return &jobsClient{cc}
}

func (c *jobsClient) GetJob(ctx context.Context, in *hurtlocker_jobsrv_jobs_request.GetJobReq, opts ...grpc.CallOption) (*hurtlocker_jobsrv_jobs_response.JobResp, error) {
	out := new(hurtlocker_jobsrv_jobs_response.JobResp)
	err := grpc.Invoke(ctx, "/hurtlocker.jobsrv.jobs.Jobs/GetJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) CreateJob(ctx context.Context, in *hurtlocker_jobsrv_jobs_request.CreateJobReq, opts ...grpc.CallOption) (*hurtlocker_jobsrv_jobs_response.JobResp, error) {
	out := new(hurtlocker_jobsrv_jobs_response.JobResp)
	err := grpc.Invoke(ctx, "/hurtlocker.jobsrv.jobs.Jobs/CreateJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Jobs service

type JobsServer interface {
	GetJob(context.Context, *hurtlocker_jobsrv_jobs_request.GetJobReq) (*hurtlocker_jobsrv_jobs_response.JobResp, error)
	CreateJob(context.Context, *hurtlocker_jobsrv_jobs_request.CreateJobReq) (*hurtlocker_jobsrv_jobs_response.JobResp, error)
}

func RegisterJobsServer(s *grpc.Server, srv JobsServer) {
	s.RegisterService(&_Jobs_serviceDesc, srv)
}

func _Jobs_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hurtlocker_jobsrv_jobs_request.GetJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hurtlocker.jobsrv.jobs.Jobs/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).GetJob(ctx, req.(*hurtlocker_jobsrv_jobs_request.GetJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hurtlocker_jobsrv_jobs_request.CreateJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hurtlocker.jobsrv.jobs.Jobs/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).CreateJob(ctx, req.(*hurtlocker_jobsrv_jobs_request.CreateJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jobs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hurtlocker.jobsrv.jobs.Jobs",
	HandlerType: (*JobsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJob",
			Handler:    _Jobs_GetJob_Handler,
		},
		{
			MethodName: "CreateJob",
			Handler:    _Jobs_CreateJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "components/jobsrv/jobs/jobs.proto",
}

func init() { proto.RegisterFile("components/jobsrv/jobs/jobs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0xce, 0xcf, 0x2d,
	0xc8, 0xcf, 0x4b, 0xcd, 0x2b, 0x29, 0xd6, 0xcf, 0xca, 0x4f, 0x2a, 0x2e, 0x2a, 0x03, 0x53, 0x60,
	0x42, 0xaf, 0xa0, 0x28, 0xbf, 0x24, 0x5f, 0x48, 0x2c, 0xa3, 0xb4, 0xa8, 0x24, 0x27, 0x3f, 0x39,
	0x3b, 0xb5, 0x48, 0x0f, 0xa2, 0x04, 0x4c, 0x49, 0x69, 0xe2, 0xd0, 0x5a, 0x94, 0x5a, 0x58, 0x9a,
	0x5a, 0x5c, 0x82, 0x64, 0x84, 0x94, 0x16, 0x4e, 0xa5, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x48,
	0x6a, 0x8d, 0x4e, 0x31, 0x72, 0xb1, 0x78, 0xe5, 0x27, 0x15, 0x0b, 0xc5, 0x72, 0xb1, 0xb9, 0xa7,
	0x96, 0x78, 0xe5, 0x27, 0x09, 0x69, 0xea, 0x61, 0x77, 0x82, 0x1e, 0xd4, 0x2a, 0x3d, 0x88, 0xba,
	0xa0, 0xd4, 0x42, 0x29, 0x0d, 0xdc, 0x4a, 0x21, 0x56, 0xe9, 0x81, 0x15, 0x16, 0x17, 0x08, 0x25,
	0x73, 0x71, 0x3a, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0x82, 0x6c, 0xd0, 0x21, 0x64, 0x03, 0x5c, 0x29,
	0x49, 0x96, 0x38, 0x59, 0x47, 0x59, 0xa6, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7,
	0xea, 0x27, 0x67, 0x94, 0x26, 0x67, 0xe7, 0xa4, 0x66, 0xa4, 0x26, 0xa6, 0x14, 0xeb, 0x23, 0x8c,
	0xd0, 0xc7, 0x1e, 0x3a, 0x49, 0x6c, 0xe0, 0x00, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x69,
	0x8c, 0xdb, 0xf9, 0xa4, 0x01, 0x00, 0x00,
}
