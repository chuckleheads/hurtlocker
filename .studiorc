#!/bin/bash

RED='\033[0;31m'
NO_COLOR='\033[0m'

declare -A svc_params=(
  [agent]="      --bind rabbitmq:rabbitmq.default"
  [datastore]=""
  [logsrv]=""
  [originsrv]="  --bind datastore:datastore.default"
  [router]="     --bind originsrv:originsrv.default --bind sessionsrv:sessionsrv.default --bind logsrv:logsrv.default"
  [sessionsrv]=" --bind datastore:datastore.default"
)

stop-on-failure() {
  (set -e; "$@");
  rv=$?
  if [ $rv -ne 0 ]; then
    echo -e "${RED}ERROR: $* aborted due to error${NO_COLOR}"
    return 1
  fi
}

command-exists() {
  command -V "$1" > /dev/null 2>&1
}

configure() {
  /src/support/dev/config.sh
}

install-packages() {
  hab pkg install \
  core/cacerts \
  core/net-tools \
  core/procps-ng \
  core/curl \
  -b -c stable
}

no_install_deps() {
  local file="/src/cleanup"
  if [ ! -f "$file" ]; then
    touch "$file"
  else
    echo "1"
  fi
}

# Cleanup any development touch files we laid down when checking to see if we could run NO_INSTALL_DEPS
_cleanup() {
  if [ -f "/src/cleanup" ]; then
    rm "/src/cleanup"
  fi
}

_load-if-not-loaded() {
  local pkg_ident
  pkg_ident=$1

  if hab sup status "$pkg_ident" > /dev/null; then
    echo "$pkg_ident is already loaded"
  else
    hab svc load "$@"
  fi
}
load-if-not-loaded() { stop-on-failure _load-if-not-loaded "$@"; }

_start-hurtlocker() {
  if [[ "$#" -eq 0 ]]; then
    start-hurtlocker agent
    start-hurtlocker datastore
    start-hurtlocker logsrv
    start-hurtlocker originsrv
    start-hurtlocker rabbitmq
    start-hurtlocker sessionsrv
    sleep 10
    start-hurtlocker router
    return $?
  fi

  for component in "$@"; do
    if [ -v "svc_params[$component]" ]; then
      load-if-not-loaded chuckleheads/$component ${svc_params[$component]}
    elif command-exists "start-$component"; then
      "start-$component"
    else
      echo -e "${RED}ERROR: Unknown hurtlocker service: $component${NO_COLOR}"
      return 1
    fi
  done
}
start-hurtlocker() { stop-on-failure _start-hurtlocker "$@"; }

_stop-hurtlocker() {
  if [[ "$#" -eq 0 ]]; then
    stop-hurtlocker rabbitmq datastore originsrv agent sessionsrv logsrv router
    return $?
  fi

  for component in "$@"; do
    if command-exists "stop-$component"; then
      "stop-$component"
    else
      hab svc unload chuckleheads/$component
    fi
  done
}
stop-hurtlocker() { stop-on-failure _stop-hurtlocker "$@"; }

start-rabbitmq() {
  load-if-not-loaded core/rabbitmq
}

stop-rabbitmq() {
  hab svc unload core/rabbitmq
}

_build-component() {
  local component="$1"

  stop-hurtlocker "$component"

  NO_INSTALL_DEPS=$(no_install_deps "$component") \
    build "/src/components/$component/habitat-dev"

  echo "$component build succeeded"
  start-hurtlocker "$component"
}
build-component() { stop-on-failure _build-component "$1"; }

alias bh=build-hurtlocker
_build-hurtlocker() {
  if [[ $(hab sup status) == "No services loaded." ]]; then
    start-hurtlocker
  fi

  if [[ "$#" -eq 0 ]]; then
    build-hurtlocker originsrv logsrv agent sessionsrv
    return $?
  fi

  for component in "$@"; do
    build-component "$component"
  done
}
build-hurtlocker() { stop-on-failure _build-hurtlocker "$@"; }

trap _cleanup EXIT

alias help=dev_docs
dev_docs() {
  cat <<DOCS
Welcome to the development environment for hurtlocker.
The following commands are available:

* start-hurtlocker - Start up all the services
* start-datastore - Start just the datastore
* stop-datastore - Stop just the datastore
* start-originsrv - Start just originsrv
* stop-originsrv - Stop just originsrv
* build-originsrv - Recompile originsrv. This will also automatically restart the service.
* dev_docs (alias: help) - What you're reading now

DOCS
}

install-packages
configure
